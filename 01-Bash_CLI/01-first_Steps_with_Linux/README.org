#+TITLE: HA's GNU Emacs LINUX MASTAR
#+AUTHOR: HUSSAIN ALMALKI (HA)
#+DESCRIPTION: DT's personal Emacs Linux Mastar.
#+STARTUP: showeverything
#+OPTIONS: toc:2

* TABLE OF CONTENTS :toc:
- [[#first-steps-with-linux][First steps with Linux]]
- [[#user-management][User Management]]
- [[#elevating-privileges-sudo][Elevating privileges: sudo]]
- [[#package-management][Package management]]
  - [[#how-does-it-work][How does it work?]]
  - [[#package-management-1][Package management]]
  - [[#how-to-install-software-apt][How to install software (apt)]]
  - [[#important][Important]]

* First steps with Linux
- In this chapter:
  - User management
  - Elevating privileges with sudo
  - Package management:
    - Keeping your system up to date
    - Installing / removing software
* User Management
Basics about user management
- In Linux, users can be categorized into three general categories:
  - *System accounts*:
    - They are responsible for running background tasks on your system ( such as: webserver, database,...)
    - They don't have a home directory.
  - *Regular users*:
    - They have access to their own files and directories.
    - They cannot perform administrative tasks or access other user's files without permission.
  - *Superuser* (root): 
    - The superuser (root) has unrestricted access to the entire system (including files in the home directories of regular users).
    - Can add/remove uesrs, install software.
    - Can change the configuration of the system.
* Elevating privileges: sudo
- If we want to temporarily elevate our privileges...
  - We can put a sudo in front of our command.
  - *Example*:
    - ~sudo ls /root~
  - Usually, we could not access this directory.
  - Only the root user can access it.
  - But sudo elevates our privileges.
  - This allows us to access it anyway!
#+begin_src bash
[dt@archlinux ~]$ ls /root
ls: cannot open directory '/root': Permission denied
[dt@archlinux ~]$ sudo ls /root
[sudo] password for dt:
Desktop  nuclei-templates  snap
#+end_src

NOTE: But be careful: *Always make sure you understand what a command does.* Especially when ~sudo~ is involved.
- Example:
  - Important: DO NOT EXECUTE!
  - ~sudo rm -rf /etc~

* Package management
- Most Linux distributions offer a centralized way to install software
- This process is call package managemnet
- This is an enormous benefit of many Linux systems
- As it helps us to keep our system up to date
- A lot of application sno longer need to include their own updater (Example: Firefox, Chrome)

** How does it work?
- Our system connects to centralized repositories
- They provide a list of available packages (including available versions, and thire dependencies)
- This list can then be use to install updates, or install additional tools

** Package management
- Package management is slightly different for each distribution.
** How to install software (apt)
- On Debian-based distributions (such as Ubuntu), we can use the tool ~apt~ to keep our system up to date.
- It provides several commands for us:
  - *apt update*:
    - Refreshes the list of available packages
    - We should run this before doing anything else with apt
  - *apt upgrade*:
    - Runs a small upgrade of our system
    - Small means: Upgrades existing packages (and when using ~apt~, also allows the install of additional dependencies)
  - *apt full-upgrade* or *apt dist-upgrade*:
    - Runs a large upgrade of our system
    - Large means: Upgrades existing packages, and removes/install additional packages (dependencies)
  - To *install/remove* software:
    - apt install [package]:
      - This will install an additional package on our system
      - *Example*: ~apt install cowsay~
    - apt remove [package]:
      - Removes a package from our system
      - *Example*: ~apt remove cowsay~
    - apt autoremove:
      - Removes packages that are no longer needed
      - You can run this if there're any errors during an upgrade or full-upgrade
** Important
- There're additional commands for ~apt~
- We will have a more in-depth look at package management on Ubuntu later
- apt-get is another implementation of the apt tool
- Sometimes I might use thsi as well: ~apt-get update~
